// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file Handshake.hpp
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef FAST_DDS_GENERATED__REMOTE_MSGS_HANDSHAKE_HPP
#define FAST_DDS_GENERATED__REMOTE_MSGS_HANDSHAKE_HPP

#include <cstdint>
#include <utility>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(HANDSHAKE_SOURCE)
#define HANDSHAKE_DllAPI __declspec( dllexport )
#else
#define HANDSHAKE_DllAPI __declspec( dllimport )
#endif // HANDSHAKE_SOURCE
#else
#define HANDSHAKE_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define HANDSHAKE_DllAPI
#endif // _WIN32

namespace remote_msgs {

/*!
 * @brief This class represents the structure HandshakeRequest defined by the user in the IDL file.
 * @ingroup Handshake
 */
class HandshakeRequest
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport HandshakeRequest()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~HandshakeRequest()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object HandshakeRequest that will be copied.
     */
    eProsima_user_DllExport HandshakeRequest(
            const HandshakeRequest& x)
    {
                    m_noa_active = x.m_noa_active;

                    m_override_status = x.m_override_status;

                    m_override_ready = x.m_override_ready;

                    m_timestamp = x.m_timestamp;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object HandshakeRequest that will be copied.
     */
    eProsima_user_DllExport HandshakeRequest(
            HandshakeRequest&& x) noexcept
    {
        m_noa_active = x.m_noa_active;
        m_override_status = x.m_override_status;
        m_override_ready = x.m_override_ready;
        m_timestamp = x.m_timestamp;
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object HandshakeRequest that will be copied.
     */
    eProsima_user_DllExport HandshakeRequest& operator =(
            const HandshakeRequest& x)
    {

                    m_noa_active = x.m_noa_active;

                    m_override_status = x.m_override_status;

                    m_override_ready = x.m_override_ready;

                    m_timestamp = x.m_timestamp;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object HandshakeRequest that will be copied.
     */
    eProsima_user_DllExport HandshakeRequest& operator =(
            HandshakeRequest&& x) noexcept
    {

        m_noa_active = x.m_noa_active;
        m_override_status = x.m_override_status;
        m_override_ready = x.m_override_ready;
        m_timestamp = x.m_timestamp;
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x HandshakeRequest object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const HandshakeRequest& x) const
    {
        return (m_noa_active == x.m_noa_active &&
           m_override_status == x.m_override_status &&
           m_override_ready == x.m_override_ready &&
           m_timestamp == x.m_timestamp);
    }

    /*!
     * @brief Comparison operator.
     * @param x HandshakeRequest object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const HandshakeRequest& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function sets a value in member noa_active
     * @param _noa_active New value for member noa_active
     */
    eProsima_user_DllExport void noa_active(
            int32_t _noa_active)
    {
        m_noa_active = _noa_active;
    }

    /*!
     * @brief This function returns the value of member noa_active
     * @return Value of member noa_active
     */
    eProsima_user_DllExport int32_t noa_active() const
    {
        return m_noa_active;
    }

    /*!
     * @brief This function returns a reference to member noa_active
     * @return Reference to member noa_active
     */
    eProsima_user_DllExport int32_t& noa_active()
    {
        return m_noa_active;
    }


    /*!
     * @brief This function sets a value in member override_status
     * @param _override_status New value for member override_status
     */
    eProsima_user_DllExport void override_status(
            int32_t _override_status)
    {
        m_override_status = _override_status;
    }

    /*!
     * @brief This function returns the value of member override_status
     * @return Value of member override_status
     */
    eProsima_user_DllExport int32_t override_status() const
    {
        return m_override_status;
    }

    /*!
     * @brief This function returns a reference to member override_status
     * @return Reference to member override_status
     */
    eProsima_user_DllExport int32_t& override_status()
    {
        return m_override_status;
    }


    /*!
     * @brief This function sets a value in member override_ready
     * @param _override_ready New value for member override_ready
     */
    eProsima_user_DllExport void override_ready(
            int32_t _override_ready)
    {
        m_override_ready = _override_ready;
    }

    /*!
     * @brief This function returns the value of member override_ready
     * @return Value of member override_ready
     */
    eProsima_user_DllExport int32_t override_ready() const
    {
        return m_override_ready;
    }

    /*!
     * @brief This function returns a reference to member override_ready
     * @return Reference to member override_ready
     */
    eProsima_user_DllExport int32_t& override_ready()
    {
        return m_override_ready;
    }


    /*!
     * @brief This function sets a value in member timestamp
     * @param _timestamp New value for member timestamp
     */
    eProsima_user_DllExport void timestamp(
            uint64_t _timestamp)
    {
        m_timestamp = _timestamp;
    }

    /*!
     * @brief This function returns the value of member timestamp
     * @return Value of member timestamp
     */
    eProsima_user_DllExport uint64_t timestamp() const
    {
        return m_timestamp;
    }

    /*!
     * @brief This function returns a reference to member timestamp
     * @return Reference to member timestamp
     */
    eProsima_user_DllExport uint64_t& timestamp()
    {
        return m_timestamp;
    }



private:

    int32_t m_noa_active{0};
    int32_t m_override_status{0};
    int32_t m_override_ready{0};
    uint64_t m_timestamp{0};

};
/*!
 * @brief This class represents the structure HandshakeResponse defined by the user in the IDL file.
 * @ingroup Handshake
 */
class HandshakeResponse
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport HandshakeResponse()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~HandshakeResponse()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object HandshakeResponse that will be copied.
     */
    eProsima_user_DllExport HandshakeResponse(
            const HandshakeResponse& x)
    {
                    m_noa_active = x.m_noa_active;

                    m_override_response = x.m_override_response;

                    m_current_control_source = x.m_current_control_source;

                    m_timestamp = x.m_timestamp;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object HandshakeResponse that will be copied.
     */
    eProsima_user_DllExport HandshakeResponse(
            HandshakeResponse&& x) noexcept
    {
        m_noa_active = x.m_noa_active;
        m_override_response = x.m_override_response;
        m_current_control_source = x.m_current_control_source;
        m_timestamp = x.m_timestamp;
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object HandshakeResponse that will be copied.
     */
    eProsima_user_DllExport HandshakeResponse& operator =(
            const HandshakeResponse& x)
    {

                    m_noa_active = x.m_noa_active;

                    m_override_response = x.m_override_response;

                    m_current_control_source = x.m_current_control_source;

                    m_timestamp = x.m_timestamp;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object HandshakeResponse that will be copied.
     */
    eProsima_user_DllExport HandshakeResponse& operator =(
            HandshakeResponse&& x) noexcept
    {

        m_noa_active = x.m_noa_active;
        m_override_response = x.m_override_response;
        m_current_control_source = x.m_current_control_source;
        m_timestamp = x.m_timestamp;
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x HandshakeResponse object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const HandshakeResponse& x) const
    {
        return (m_noa_active == x.m_noa_active &&
           m_override_response == x.m_override_response &&
           m_current_control_source == x.m_current_control_source &&
           m_timestamp == x.m_timestamp);
    }

    /*!
     * @brief Comparison operator.
     * @param x HandshakeResponse object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const HandshakeResponse& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function sets a value in member noa_active
     * @param _noa_active New value for member noa_active
     */
    eProsima_user_DllExport void noa_active(
            int32_t _noa_active)
    {
        m_noa_active = _noa_active;
    }

    /*!
     * @brief This function returns the value of member noa_active
     * @return Value of member noa_active
     */
    eProsima_user_DllExport int32_t noa_active() const
    {
        return m_noa_active;
    }

    /*!
     * @brief This function returns a reference to member noa_active
     * @return Reference to member noa_active
     */
    eProsima_user_DllExport int32_t& noa_active()
    {
        return m_noa_active;
    }


    /*!
     * @brief This function sets a value in member override_response
     * @param _override_response New value for member override_response
     */
    eProsima_user_DllExport void override_response(
            int32_t _override_response)
    {
        m_override_response = _override_response;
    }

    /*!
     * @brief This function returns the value of member override_response
     * @return Value of member override_response
     */
    eProsima_user_DllExport int32_t override_response() const
    {
        return m_override_response;
    }

    /*!
     * @brief This function returns a reference to member override_response
     * @return Reference to member override_response
     */
    eProsima_user_DllExport int32_t& override_response()
    {
        return m_override_response;
    }


    /*!
     * @brief This function sets a value in member current_control_source
     * @param _current_control_source New value for member current_control_source
     */
    eProsima_user_DllExport void current_control_source(
            bool _current_control_source)
    {
        m_current_control_source = _current_control_source;
    }

    /*!
     * @brief This function returns the value of member current_control_source
     * @return Value of member current_control_source
     */
    eProsima_user_DllExport bool current_control_source() const
    {
        return m_current_control_source;
    }

    /*!
     * @brief This function returns a reference to member current_control_source
     * @return Reference to member current_control_source
     */
    eProsima_user_DllExport bool& current_control_source()
    {
        return m_current_control_source;
    }


    /*!
     * @brief This function sets a value in member timestamp
     * @param _timestamp New value for member timestamp
     */
    eProsima_user_DllExport void timestamp(
            uint64_t _timestamp)
    {
        m_timestamp = _timestamp;
    }

    /*!
     * @brief This function returns the value of member timestamp
     * @return Value of member timestamp
     */
    eProsima_user_DllExport uint64_t timestamp() const
    {
        return m_timestamp;
    }

    /*!
     * @brief This function returns a reference to member timestamp
     * @return Reference to member timestamp
     */
    eProsima_user_DllExport uint64_t& timestamp()
    {
        return m_timestamp;
    }



private:

    int32_t m_noa_active{0};
    int32_t m_override_response{0};
    bool m_current_control_source{false};
    uint64_t m_timestamp{0};

};

} // namespace remote_msgs

#endif // _FAST_DDS_GENERATED_REMOTE_MSGS_HANDSHAKE_HPP_


